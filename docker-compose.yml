version: '3.9'

services:
  digital-shop-app:
    build:
      context: .
    command: >
      sh -c "
        python manage.py wait_for_db &&
        python manage.py makemigrations &&
        python manage.py migrate &&
        gunicorn digitalshopapp.wsgi --bind 0.0.0.0:8000 --workers=2
      "
    volumes:
      - ./digital-shop-app:/digital-shop-app
      - ./data/web:/vol/web
      - django:/vol/web/static
    ports:
      - 8000:8000
    env_file: .env
    depends_on:
      - db
      - redis

  celery:
    build: .
    # For celery:
    # -A <name> - project name
    # --beat - for django-celery-beat
    # worker - for django-celery-results (saving tasks in db)
    # --scheduler django - for django-celery-beat
    command: celery -A digitalshopapp worker --beat --loglevel=INFO
    volumes:
      - ./digital-shop-app:/digital-shop-app
    env_file: .env
    depends_on:
      - digital-shop-app
      - redis
      - db
  
  redis:
    image: "redis:alpine"

  nginx:
    build:
      context: ./nginx
    ports:
      - 80:8080
    env_file: .env
    volumes:
      - ./nginx/nginx-setup.conf:/etc/nginx/conf.d/default.conf
      #- react:/var/www/react
      - django:/var/www/static
      # This mount an existing folder to nginx (that's why only django volume exists)
      - ./frontend/react/assets/ready-build:/var/www/react
    depends_on:
      - digital-shop-app
      #- frontend

  db:
    image: postgres:13-alpine
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}

  #frontend:
  #  build:
  #    context: ./frontend
  #  command: >
  #    sh -c "npm run dev"
  #  volumes:
  #    - ./frontend/react:/react
  #    #- react:/react/assets/ready-build
  #  env_file: .env

volumes:
  #react:
  django: