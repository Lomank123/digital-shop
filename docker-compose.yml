version: '3.9'

services:
  django:
    build:
      context: .
    command: >
      sh -c "
        python manage.py wait_for_db &&
        python manage.py makemigrations &&
        python manage.py migrate &&
        gunicorn digitalshopapp.wsgi --bind 0.0.0.0:8000 --workers=2
      "
    volumes:
      - ./digital-shop-app:/digital-shop-app
      - ./data/web:/vol/web
      - django:/vol/web/static
    ports:
      - 8000:8000
    env_file: .env
    depends_on:
      - db
      - redis

  celery-worker:
    build: .
    command: wait-for-it.sh django:8000 -s -t 120 -- celery -A digitalshopapp worker --loglevel=INFO --beat
    volumes:
      - ./digital-shop-app:/digital-shop-app
    env_file: .env
    depends_on:
      - django
      - redis
      - db

  celery-flower:
    image: mher/flower:latest
    command: celery flower --port=5555
    ports:
      - 5557:5555
    env_file: .env
    depends_on:
      - redis
  
  redis:
    image: "redis:alpine"

  nginx:
    build:
      context: ./nginx
    ports:
      - 80:8080
    env_file: .env
    volumes:
      - ./nginx/nginx-setup.conf:/etc/nginx/conf.d/default.conf
      #- react:/var/www/react
      - django:/var/www/static
      # This mount an existing folder to nginx (that's why only django volume exists)
      - ./frontend/react/assets/ready-build:/var/www/react
    depends_on:
      - django
      #- frontend

  test:
    build: .
    command: >
      sh -c "
        python manage.py wait_for_db &&
        coverage run --source='.' manage.py test mainapp.tests &&
        coverage report &&
        coverage xml
      "
    volumes: 
      - ./digital-shop-app:/digital-shop-app
    env_file: .env
    depends_on: 
      - db

  lint:
    build: .
    command: >
      sh -c "
        flake8 --max-line-length 120 --exclude migrations,venv,manage.py,__init__.py
      "
    volumes: 
      - ./digital-shop-app:/digital-shop-app
    env_file: .env
    depends_on:
      - db

  filldb:
    build: .
    command: >
      sh -c "
        python manage.py wait_for_db &&
        python manage.py makemigrations &&
        python manage.py migrate && 
        python manage.py loaddata fixtures/dev.json
      "
    volumes: 
      - ./digital-shop-app:/digital-shop-app
    env_file: .env
    depends_on:
      - db
    profiles: ["init"]

  db:
    image: postgres:13-alpine
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}

volumes:
  #react:
  django:

  #frontend:
  #  build:
  #    context: ./frontend
  #  command: >
  #    sh -c "npm run dev"
  #  volumes:
  #    - ./frontend/react:/react
  #    #- react:/react/assets/ready-build
  #  env_file: .env
  #  profiles: ["init"]
